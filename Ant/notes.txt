Creating and using External Libs:

- Created a ext lib class in pkg external.
- compiled and created jar ExtLib.jar
- Updated pkg1/Main.java to use the ExtLib class.
- Copied the ExtLib.jar to lib dir.

- Compiled the pkg1/Main.java

$ javac -sourcepath src/ -d build/classes/ src/pkg1/*.java

- Run pkg1.Main by adding ExtLib.jar to the classpath.

$ cd build/classes/

$ java -cp .:../../lib/ExtLib.jar pkg1.Main
This is Main
This is Class1
This is Class2 -- Edited
This is Class3
This is New Pkg Class -- EDIT
I am external Lib

Imp: Remember to add the current dir ( . )  to classpath

+++

In build1.xml:

Setting the classpath:

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="ExtLib.jar"/>
    </path>
	
Referring the classpath:
	
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
		
		.....
		.......
		.........
		
		<classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
        </classpath>
		
		
		
$ ant -f build1.xml
Buildfile: c:\Workspace\Git\Java\Ant\build1.xml

clean:
   [delete] Deleting directory c:\Workspace\Git\Java\Ant\build

compile:
    [mkdir] Created dir: c:\Workspace\Git\Java\Ant\build\classes
    [javac] Compiling 5 source files to c:\Workspace\Git\Java\Ant\build\classes

jar:
    [mkdir] Created dir: c:\Workspace\Git\Java\Ant\build\jars
      [jar] Building jar: c:\Workspace\Git\Java\Ant\build\jars\Main.jar
     [echo] ************************************************************
     [echo] ***********   Created JAR: build/jars/Main.jar   ***********
     [echo] ************************************************************

run:
     [java] This is Main
     [java] This is Class1
     [java] This is Class2 -- Edited
     [java] This is Class3
     [java] This is New Pkg Class -- EDIT
     [java] I am external Lib

BUILD SUCCESSFUL
Total time: 1 second

+++

Building executable/runnable jar to use external libs.

Note: The location of the external jar relative to the location of created project jar is imp.
		The location of entry point is provided in the Main-Class: attribute of manifest.mf
		The relative location of the external jar wrt the created project jar is provided in the Class-Path: attribute.
		
		
$ pwd
/c/Workspace/Git/Java/Ant

$ ant clean
Buildfile: c:\Workspace\Git\Java\Ant\build.xml

clean:

BUILD SUCCESSFUL
Total time: 0 seconds

$ find
.
./build.xml
./build1.xml
./external-bak
./external-bak/ExtLib.class
./external-bak/ExtLib.java
./external-bak/README.txt
./lib
./lib/ExtLib.jar
./MANIFEST.MF
./notes.txt
./src
./src/pkg1
./src/pkg1/Class1.java
./src/pkg1/Class2.java
./src/pkg1/Class3.java
./src/pkg1/Main.java
./src/pkg2
./src/pkg2/NewPkgClass.java

$ mkdir -p build/classes build/jars

$ javac -cp lib/ExtLib.jar -sourcepath src/ -d build/classes/ src/pkg1/*.java src/pkg2/*.java

$ cat MANIFEST.MF
Main-Class: pkg1.Main
Class-Path: ../../lib/ExtLib.jar

$ jar cvfm build/jars/Main.jar MANIFEST.MF -C build/classes pkg1 -C build/classes pkg2
added manifest
adding: pkg1/(in = 0) (out= 0)(stored 0%)
adding: pkg1/Class1.class(in = 401) (out= 283)(deflated 29%)
adding: pkg1/Class2.class(in = 411) (out= 294)(deflated 28%)
adding: pkg1/Class3.class(in = 401) (out= 283)(deflated 29%)
adding: pkg1/Main.class(in = 680) (out= 457)(deflated 32%)
adding: pkg2/(in = 0) (out= 0)(stored 0%)
adding: pkg2/NewPkgClass.class(in = 427) (out= 302)(deflated 29%)

$ java -jar build/jars/Main.jar
This is Main
This is Class1
This is Class2 -- Edited
This is Class3
This is New Pkg Class -- EDIT
I am external Lib

+++